  .include "asm/macros.inc"
  .syntax unified

  arm_func_start sub_08000000
sub_08000000: @ 0x08000000
	b _080000C0
_08000004:
	.byte 0x24, 0xFF, 0xAE, 0x51, 0x69, 0x9A, 0xA2, 0x21, 0x3D, 0x84, 0x82, 0x0A
	.byte 0x84, 0xE4, 0x09, 0xAD, 0x11, 0x24, 0x8B, 0x98, 0xC0, 0x81, 0x7F, 0x21, 0xA3, 0x52, 0xBE, 0x19
	.byte 0x93, 0x09, 0xCE, 0x20, 0x10, 0x46, 0x4A, 0x4A, 0xF8, 0x27, 0x31, 0xEC, 0x58, 0xC7, 0xE8, 0x33
	.byte 0x82, 0xE3, 0xCE, 0xBF, 0x85, 0xF4, 0xDF, 0x94, 0xCE, 0x4B, 0x09, 0xC1, 0x94, 0x56, 0x8A, 0xC0
	.byte 0x13, 0x72, 0xA7, 0xFC, 0x9F, 0x84, 0x4D, 0x73, 0xA3, 0xCA, 0x9A, 0x61, 0x58, 0x97, 0xA3, 0x27
	.byte 0xFC, 0x03, 0x98, 0x76, 0x23, 0x1D, 0xC7, 0x61, 0x03, 0x04, 0xAE, 0x56, 0xBF, 0x38, 0x84, 0x00
	.byte 0x40, 0xA7, 0x0E, 0xFD, 0xFF, 0x52, 0xFE, 0x03, 0x6F, 0x95, 0x30, 0xF1, 0x97, 0xFB, 0xC0, 0x85
	.byte 0x60, 0xD6, 0x80, 0x25, 0xA9, 0x63, 0xBE, 0x03, 0x01, 0x4E, 0x38, 0xE2, 0xF9, 0xA2, 0x34, 0xFF
	.byte 0xBB, 0x3E, 0x03, 0x44, 0x78, 0x00, 0x90, 0xCB, 0x88, 0x11, 0x3A, 0x94, 0x65, 0xC0, 0x7C, 0x63
	.byte 0x87, 0xF0, 0x3C, 0xAF, 0xD6, 0x25, 0xE4, 0x8B, 0x38, 0x0A, 0xAC, 0x72, 0x21, 0xD4, 0xF8, 0x07
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x55, 0x55, 0x4A
	.byte 0x30, 0x31, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBA, 0x00, 0x00
_080000C0:
	mov r0, #0x12
	msr cpsr_fc, r0
	ldr sp, _080000F8 @ =0x03007FA0
	mov r0, #0x1f
	msr cpsr_fc, r0
	ldr sp, _080000F4 @ =0x03007F00
	ldr r1, _080001C8 @ =0x03007FFC
	add r0, pc, #0x18 @ =sub_080000FC
	str r0, [r1]
	ldr r1, _080001CC @ =AgbMain
	mov lr, pc
	bx r1

	arm_func_start sub_080000F0
sub_080000F0: @ 0x080000F0
	b _080000C0
	.align 2, 0
_080000F4: .4byte 0x03007F00
_080000F8: .4byte 0x03007FA0

	arm_func_start sub_080000FC
sub_080000FC: @ 0x080000FC
	mov ip, #0x4000000
	add r3, ip, #0x200
	ldr r2, [r3]
	and r1, r2, r2, lsr #16
	mov r2, #0
	ands r0, r1, #0x2000
	strbne r0, [r3, #-0x17c]
_08000118:
	bne _08000118
	ands r0, r1, #0xc0
	bne _080001B4
	add r2, r2, #4
	ands r0, r1, #1
	strhne r0, [ip, #-8]
	bne _080001B4
	add r2, r2, #4
	ands r0, r1, #2
	bne _080001B4
	add r2, r2, #4
	ands r0, r1, #4
	bne _080001B4
	add r2, r2, #4
	ands r0, r1, #8
	bne _080001B4
	add r2, r2, #4
	ands r0, r1, #0x10
	bne _080001B4
	add r2, r2, #4
	ands r0, r1, #0x20
	bne _080001B4
	add r2, r2, #4
	ands r0, r1, #0x40
	bne _080001B4
	add r2, r2, #4
	ands r0, r1, #0x100
	bne _080001B4
	add r2, r2, #4
	ands r0, r1, #0x200
	bne _080001B4
	add r2, r2, #4
	ands r0, r1, #0x400
	bne _080001B4
	add r2, r2, #4
	ands r0, r1, #0x800
	bne _080001B4
	add r2, r2, #4
	ands r0, r1, #0x1000
_080001B4:
	strh r0, [r3, #2]
	ldr r1, _080001D0 @ =0x03000A70
	add r1, r1, r2
	ldr r0, [r1]
	bx r0
	.align 2, 0
_080001C8: .4byte 0x03007FFC
_080001CC: .4byte AgbMain
_080001D0: .4byte 0x03000A70

	arm_func_start sub_080001D4
sub_080001D4: @ 0x080001D4
	push {r4, r5, r6, r7, r8, sb, sl, fp}
	mov ip, #0x4000000
	ldr fp, _08000210 @ =0x03001050
	add sl, fp, #0x40
	mov sb, #1
	mov r8, #0
	strb r8, [ip, #0x208]
	ldm sl, {r0, r1, r2, r3, r4, r5, r6, r7}
	stm sl!, {r4, r5, r6, r7}
	stm sl!, {r0, r1, r2, r3}
	ldr r0, [fp, #4]
	str r8, [fp, #4]
	strb sb, [ip, #0x208]
	pop {r4, r5, r6, r7, r8, sb, sl, fp}
	bx lr
	.align 2, 0
_08000210: .4byte 0x03001050

	arm_func_start sub_08000214
sub_08000214: @ 0x08000214
	mov ip, #0x4000000
	add ip, ip, #0x120
	ldm ip, {r0, r1}
	push {r7, r8, sb, sl, fp}
	ldr fp, _0800032C @ =0x03001050
	mov sb, #0xfe
	add sb, sb, #0xfe00
	ldrh r3, [ip, #8]
	and r3, r3, #0x40
	strb r3, [fp, #9]
	ldr sl, [fp, #0x14]
	adds r3, sl, #1
	blt _08000270
	bne _08000264
	strh sb, [ip, #0xa]
	add r8, fp, #0x28
	ldm r8, {r2, r3}
	mov r7, r2
	stm r8, {r3, r7}
	b _08000270
_08000264:
	ldr r3, [fp, #0x2c]
	ldr r2, [r3, sl, lsl #1]
	strh r2, [ip, #0xa]
_08000270:
	cmp sl, #0xb
	addlt sl, sl, #1
	strlt sl, [fp, #0x14]
	push {r0, r1, r5, r6}
	mov r6, #3
_08000284:
	add r8, fp, #0x18
	add r8, r8, r6, lsl #2
	ldr sl, [r8]
	lsl r3, r6, #1
	ldrh r5, [sp, r3]
	cmp r5, sb
	bne _080002B4
	cmp sl, #9
	ble _080002B4
	mov r0, #1
	sub sl, r0, #2
	b _080002E0
_080002B4:
	ldr r0, [r8, #0x18]
	lsl r3, sl, #1
	strh r5, [r0, r3]
	cmp sl, #9
	bne _080002E0
	ldr r1, [r8, #0x28]
	str r0, [r8, #0x28]
	str r1, [r8, #0x18]
	add r3, fp, #4
	mov r0, #1
	strb r0, [r3, r6]
_080002E0:
	cmp sl, #0xb
	addlt sl, sl, #1
	str sl, [r8]
	subs r6, r6, #1
	bge _08000284
	ldrb r0, [fp]
	cmp r0, #0
	beq _08000320
	ldr r7, _08000330 @ =0x0400010E
	mov r0, #0
	strh r0, [r7]
	ldrh r0, [ip, #8]
	orr r0, r0, #0x80
	strh r0, [ip, #8]
	mov r0, #0xc0
	strh r0, [r7]
_08000320:
	add sp, sp, #8
	pop {r5, r6, r7, r8, sb, sl, fp}
	bx lr
	.align 2, 0
_0800032C: .4byte 0x03001050
_08000330: .4byte 0x0400010E

